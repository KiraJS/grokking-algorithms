/*
* Допустим вы строите приложение по управлению финансами. Ежедневно записываете траты.
* В конце месяца вы анализируете расходы и вычисляете, сколько денег было потрачено
* При работе с данными выполняется множество операций вставки и относительно немного операций чтения.
* Какую структуру выбрать?
*
* Список
* */

/*
* Допустим вы пишете приложение для приема заказов от посетителей ресторана.
* Приложение должно хранить список заказа. Официанты добавляют, повара читают.
* Заказы образуют очередь: официанты добавляют в конец, повар читает, начиная с первого.
* Какую структуру данных использовать?
*
* Список
* */

/*
* Допустим Facebook хранит список имен пользователей. Когда кто-то заходит на сайт, система ищет имя.
* Допустим используется бинарный поиск. Какую структуру выбрать?
*
* Массив, т.к нужен быстрый доступ к среднему элементы
* */

/*
* Пользователи создают учетные записи. Предположим используется массив. Какими недостатками обладает массив для выполнения вставки?
* Допустим используется бинарный поиск. Что произойдет при вставке?
*
* Нельзя быстро вставить данные. При поиске придется каждый раз сортировать массив.
* */


